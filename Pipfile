[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[dev-packages]
yapf = "~=0.32.0"
isort = "~=5.10.1"
rope = "~=0.22.0"
pytest = "~=6.2.5"
pytest-cov = "*"
pytest-mock = "*"
pylint = "~=2.13.0"
mypy = "==0.931"
guppy3 = "~=3.1.2"
pre-commit = "~=2.16.0"
flake8 = "==4.0.1"
psutil = "~=5.9.0"
types-requests = "*"
types-PyYAML = "*"
types-setuptools = "*"

[packages]
requests = "~=2.31.0"
pydantic = "==1.10.0"
pyyaml = "~=6.0"
psutil = "~=5.9.0"
"amazon.ion" = "~=0.9.0"

[requires]
python_version = "3.12"

[scripts]
check = "pipenv check -i 39253 -i 39621 -i 41002 -i 50916 -i 51457 -i 61416 -i 61893"
tests = "pytest --cov=. --cov-report=xml --no-cov-on-fail -m 'not uses_copyright_material'"
tests-nogame = "pytest --cov=. --cov-report=xml --no-cov-on-fail -m 'not uses_copyright_material and not requires_game'"
tests-nocov = "pytest -m 'not uses_copyright_material'"
tests-nogame-nocov = "pytest -m 'not uses_copyright_material and not requires_game'"
pre-commit = "pre-commit run --all-files"
update-pre-commit = "pre-commit autoupdate"
mypy = "mypy ."
pylint = "pylint ark automate export tests ue utils processing"
flake = "flake8"
yapf = "yapf --diff --recursive ark automate export tests ue utils processing"
isort = "isort --check-only ."
fix-isort = "isort ."
fix-yapf = "yapf --in-place --recursive ark automate export tests ue utils processing"
i = "ipython -i -m interactive interactive/setup.py"
profile-species = "python -m cProfile -o automate.prof -m automate --skip-install asb.species"
profile-maps = "python -m cProfile -o automate.prof -m automate --skip-install wiki.maps"
profile-view = "snakeviz automate.prof"
time-island = "python -m timeit -r 10 -s 'from interactive.setup import loader' 'loader._load_asset(\"/Game/Maps/TheIslandSubmaps/TheIsland\")'"
mem-island = "python -m utils.measuremem 'from interactive.setup import loader' 'loader._load_asset(\"/Game/Maps/TheIslandSubmaps/TheIsland\")'"
time-genesis = "python -m timeit -r 10 -s 'from interactive.setup import loader' 'loader._load_asset(\"/Game/Maps/Genesis/Genesis\")'"
mem-genesis = "python -m utils.measuremem 'from interactive.setup import loader' 'loader._load_asset(\"/Game/Maps/Genesis/Genesis\")'"
time-discovery = "python -m timeit -n 1 -r 2 -s 'from interactive.setup import loader,config;from ark.discovery import _generate_hierarchy;config.mods=()' '_generate_hierarchy(loader)'"
mem-discovery = "python -m utils.measuremem 'from interactive.setup import loader,config;from ark.discovery import _generate_hierarchy;config.mods=()' '_generate_hierarchy(loader)'"
update-schema = "python -m ark.overrides"
compile-hook = "gcc utils/shootergameserver_fwrite_hook.c -o utils/shootergameserver_fwrite_hook.so -fPIC -shared -ldl -Wall"
